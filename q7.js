//7 - 10001st Prime number
//The four adjacent digits in the 1000-digit number that have the greatest product are 9 × 9 × 8 × 9 = 5832.

var one = "73167176531330624919225119674426574742355349194934969835203127745063262395783180169848018694788518438586156078911294949545950173795833195285320880551112540698747158523863050715693290963295227443043557"
var two = "66896648950445244523161731856403098711121722383113622298934233803081353362766142828064444866452387493035890729629049156044077239071381051585930796086670172427121883998797908792274921901699720888093776"
var three = "65727333001053367881220235421809751254540594752243525849077116705560136048395864467063244157221553975369781797784617406495514929086256932197846862248283972241375657056057490261407972968652414535100474"
var four = "82166370484403199890008895243450658541227588666881164271714799244429282308634656748139191231628245861786645835912456652947654568284891288314260769004224219022671055626321111109370544217506941658960408"
var five = "0719840385096245544436298123098787992724428490918884580156166097919133875499200524063689912560717606"
var six = "0588611646710940507754100225698315520005593572972571636269561882670428252483600823257530420752963450"
var myNumber = one + two + three + four + five + six;
// Find the thirteen adjacent digits in the 1000-digit number that have the greatest product. What is the value of this product?



var total = 13;
var digits = [];
var product = 0;

var calcProduct = function(array1){
	var product1=array1[0]
	for (var y=1;y<total;y++){
		product1=product1*array1[y];
	}
	return product1;
}


for (var x=0;x<myNumber.length;x++){
	digits.push(myNumber[x]);
	if (digits.length==total){
		product = calcProduct(digits);
	} else if(digits.length>total){
		digits.splice(0,1);
		var localProduct=calcProduct(digits);
		if (localProduct>product){
			product=localProduct;
		}
	}
}

console.log("the highest product is " + product);